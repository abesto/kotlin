/*
 * Copyright 2010-2014 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.jetbrains.jet.types;

import com.intellij.testFramework.TestDataPath;
import junit.framework.Test;
import junit.framework.TestSuite;
import org.junit.runner.RunWith;
import org.jetbrains.jet.JetTestUtils;
import org.jetbrains.jet.test.InnerTestClasses;
import org.jetbrains.jet.test.TestMetadata;
import org.jetbrains.jet.JUnit3RunnerWithInners;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.jet.generators.tests.TestsPackage}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("compiler/testData/type/binding")
@TestDataPath("$PROJECT_ROOT")
@RunWith(org.jetbrains.jet.JUnit3RunnerWithInners.class)
public class JetTypeBindingTestGenerated extends AbstractJetTypeBindingTest {
    public void testAllFilesPresentInBinding() throws Exception {
        JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("compiler/testData/type/binding"), Pattern.compile("^(.+)\\.kt$"), true);
    }
    
    @TestMetadata("errorImplicitType.kt")
    public void testErrorImplicitType() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("compiler/testData/type/binding/errorImplicitType.kt");
        doTest(fileName);
    }
    
    @TestMetadata("errorType.kt")
    public void testErrorType() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("compiler/testData/type/binding/errorType.kt");
        doTest(fileName);
    }
    
    @TestMetadata("implicitType.kt")
    public void testImplicitType() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("compiler/testData/type/binding/implicitType.kt");
        doTest(fileName);
    }
    
    @TestMetadata("inOut.kt")
    public void testInOut() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("compiler/testData/type/binding/inOut.kt");
        doTest(fileName);
    }
    
    @TestMetadata("simple.kt")
    public void testSimple() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("compiler/testData/type/binding/simple.kt");
        doTest(fileName);
    }
    
}
